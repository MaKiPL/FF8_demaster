#include "coreHeader.h"
#include <gl/GL.h>
#include "stb_image.h"
#define STB_IMAGE_WRITE_IMPLEMENTATION
#include "stb_image_write.h"

DWORD _wtpBackAdd1;
DWORD _wtpBackAdd2;
DWORD _wtpBackAdd3;
DWORD _wtpBackAdd4;


struct worldTextureStructure
{
	char localPath[256];
	DWORD tpage;
	unsigned char* buffer;
	int width;
	int height;
	int channels;
	BOOL bActive;
};

struct worldTextureStructure ws[] =
{
	{"", 0, NULL, -1,-1,-1,FALSE},
	{"", 1, NULL, -1,-1,-1,FALSE},
	{"", 2, NULL, -1,-1,-1,FALSE},
	{"", 3, NULL, -1,-1,-1,FALSE},
	{"", 4, NULL, -1,-1,-1,FALSE},
	{"", 5, NULL, -1,-1,-1,FALSE},
	{"", 6, NULL, -1,-1,-1,FALSE},
	{"", 7, NULL, -1,-1,-1,FALSE},
	{"", 8, NULL, -1,-1,-1,FALSE},
	{"", 9, NULL, -1,-1,-1,FALSE},
	{"", 10, NULL, -1,-1,-1,FALSE},
	{"", 11, NULL, -1,-1,-1,FALSE},
	{"", 12, NULL, -1,-1,-1,FALSE},
	{"", 13, NULL, -1,-1,-1,FALSE},
	{"", 14, NULL, -1,-1,-1,FALSE},
	{"", 15, NULL, -1,-1,-1,FALSE},
	{"", 16, NULL, -1,-1,-1,FALSE},
	{"", 17, NULL, -1,-1,-1,FALSE},
	{"", 18, NULL, -1,-1,-1,FALSE},
	{"", 19, NULL, -1,-1,-1,FALSE},
	{"", 20, NULL, -1,-1,-1,FALSE}
};

int GetTextureIndex();

//you can't just create new folder because >WEEP< - too lazy to find the cause

DWORD lastKnownTextureId;

void _wtpGl()
{
	DWORD tPage = gl_textures[50];
	int palette = tex_header[52];
	char localn[256];

	DWORD unk = *(DWORD*)(IMAGE_BASE + 0x17424B4);
	int texIndex = lastKnownTextureId;
	sprintf(localn, "_wtpGl()::localEAX: %d, Tpage: %d, Palette: %d, TexIndex: %d\n", *(DWORD*)(IMAGE_BASE + 0x1780f88), tPage, palette, texIndex);
	OutputDebugStringA(localn);
	sprintf(localn, "%stextures\\world\\dat\\texl\\texl_%03d_0.png", DIRECT_IO_EXPORT_DIR, /*tPage*/texIndex);

	if (ws[texIndex].bActive == FALSE || ws[texIndex].buffer == NULL)
	{
		int width_, height_, channels;
		unsigned char* buffer = stbi_load(localn, &width_, &height_, &channels, 0);
		ws[texIndex].width = width_; ws[texIndex].height = height_; ws[texIndex].channels = channels;
		strcpy(ws[texIndex].localPath, localn);
		ws[texIndex].buffer = buffer;
		ws[texIndex].bActive = TRUE;
		sprintf(localn, "\tstbi::w: %d; h: %d; channels: %d\n", width_, height_, channels);
		OutputDebugStringA(localn);
	}

	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, ws[texIndex].width, ws[texIndex].height, 0, ws[texIndex].channels == 4 ? GL_RGBA : GL_RGB, GL_UNSIGNED_BYTE, ws[texIndex].buffer);
	return;
}

int GetTextureIndex()
{
	void* pixels = (void*)pixelsPtr;
	char pixNULL[24] = { 0x00 };
	char pixNULL2[24] = { 0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05 };
	char pix1_1[24] = { 0x1E,0xCF,0x0F,0xED,0xBE,0x00,0x01,0x22,0x42,0x12,0x0D,0x8F,0x1E,0xCF,0x0F,0xED,0x22,0x10,0xEF,0x03,0x31,0x0F,0xBE,0x00 };
	char pix1_2[24] = { 0x41,0x4A,0x5A,0x7F,0x20,0x29,0x31,0x7F,0x41,0x4A,0x41,0x7F,0x41,0x4A,0x5A,0x7F,0x52,0x62,0x6A,0x7F,0x52,0x5A,0x6A,0x7F };
	char pix1_3[24] = { 0x41,0x41,0x41,0x7F,0x31,0x31,0x31,0x7F,0x39,0x41,0x41,0x7F,0x41,0x41,0x41,0x7F,0x4A,0x52,0x52,0x7F,0x41,0x52,0x4A,0x7F };
	char pix1_4[24] = { 0xA4,0x9C,0x94,0x7F,0x9C,0x94,0x8B,0x7F,0xA4,0x9C,0x8B,0x7F,0xA4,0x9C,0x94,0x7F,0xA4,0xA4,0x9C,0x7F,0xAC,0xA4,0x94,0x7F };
	char pix1_5[24] = { 0x8B,0x83,0x7B,0x7F,0x39,0x41,0x39,0x7F,0x73,0x73,0x6A,0x7F,0x8B,0x83,0x7B,0x7F,0xA4,0x9C,0x8B,0x7F,0xA4,0x9C,0x8B,0x7F };
	char pix1_6[24] = { 0x5A,0x62,0x62,0x7F,0x31,0x41,0x31,0x7F,0x4A,0x5A,0x52,0x7F,0x5A,0x62,0x62,0x7F,0x7B,0x8B,0x8B,0x7F,0x73,0x83,0x83,0x7F };
	char pix1_7[24] = { 0x8B,0x83,0x7B,0x7F,0x52,0x4A,0x41,0x7F,0x7B,0x73,0x73,0x7F,0x8B,0x83,0x7B,0x7F,0x9C,0x9C,0x8B,0x7F,0x9C,0x94,0x83,0x7F };
	char pix1_8[24] = { 0x62,0x5A,0x52,0x7F,0x31,0x31,0x31,0x7F,0x5A,0x52,0x4A,0x7F,0x62,0x5A,0x52,0x7F,0x8B,0x83,0x7B,0x7F,0x6A,0x73,0x7B,0x7F };
	char pix1_9[24] = { 0x73,0x6A,0x52,0x7F,0x39,0x39,0x29,0x7F,0x62,0x62,0x4A,0x7F,0x73,0x6A,0x52,0x7F,0xA4,0x94,0x83,0x7F,0x94,0x8B,0x7B,0x7F };
	char pix1_10[24] = { 0x6A,0x6A,0x52,0x7F,0x31,0x31,0x20,0x7F,0x62,0x5A,0x4A,0x7F,0x6A,0x6A,0x52,0x7F,0x94,0x8B,0x7B,0x7F,0x8B,0x8B,0x7B,0x7F };
	char pix1_11[24] = { 0x7B,0x6A,0x52,0x7F,0x31,0x39,0x29,0x7F,0x62,0x5A,0x4A,0x7F,0x7B,0x6A,0x52,0x7F,0x9C,0x8B,0x7B,0x7F,0x94,0x83,0x73,0x7F };
	char pix1_12[24] = { 0x9C,0x94,0x83,0x7F,0x73,0x6A,0x5A,0x7F,0x94,0x8B,0x7B,0x7F,0x9C,0x94,0x83,0x7F,0xA4,0x9C,0x8B,0x7F,0xA4,0x9C,0x8B,0x7F };
	char pix1_13[24] = { 0x31,0x4A,0x29,0x7F,0x20,0x31,0x18,0x7F,0x31,0x39,0x39,0x7F,0x31,0x4A,0x29,0x7F,0x41,0x5A,0x31,0x7F,0x41,0x52,0x39,0x7F };
	char pix1_14[24] = { 0x62,0x5A,0x52,0x7F,0x29,0x31,0x29,0x7F,0x4A,0x5A,0x41,0x7F,0x62,0x5A,0x52,0x7F,0x8B,0x8B,0x7B,0x7F,0x83,0x7B,0x73,0x7F };
	char pix1_15[24] = { 0x62,0x6A,0x52,0x7F,0x39,0x39,0x31,0x7F,0x5A,0x62,0x4A,0x7F,0x62,0x6A,0x52,0x7F,0x94,0x8B,0x83,0x7F,0x83,0x83,0x73,0x7F };
	char pix1_16[24] = { 0x8B,0x83,0x7B,0x7F,0x39,0x39,0x39,0x7F,0x7B,0x7B,0x6A,0x7F,0x8B,0x83,0x7B,0x7F,0xAC,0xAC,0xA4,0x7F,0xA4,0xA4,0x94,0x7F };
	char pix1_17[24] = { 0x6A,0x52,0x4A,0x7F,0x5A,0x41,0x39,0x7F,0x6A,0x52,0x4A,0x7F,0x6A,0x52,0x4A,0x7F,0x73,0x62,0x5A,0x7F,0x7B,0x62,0x5A,0x7F };

	char pix2_1[24] = { 0x20,0x31,0x18,0x7F,0x20,0x29,0x20,0x7F,0x20,0x20,0x20,0x7F,0x18,0x20,0x18,0x7F,0x18,0x20,0x18,0x7F,0x20,0x20,0x20,0x7F };
	char pix2_2[24] = { 0x39,0x41,0x39,0x7F,0x31,0x39,0x39,0x7F,0x29,0x31,0x31,0x7F,0x29,0x31,0x29,0x7F,0x29,0x31,0x29,0x7F,0x31,0x31,0x31,0x7F };
	char pix2_3[24] = { 0x4A,0x41,0x41,0x7F,0x39,0x41,0x39,0x7F,0x31,0x31,0x31,0x7F,0x31,0x31,0x31,0x7F,0x31,0x31,0x31,0x7F,0x31,0x31,0x31,0x7F };
	char pix2_4[24] = { 0x31,0x39,0x39,0x7F,0x31,0x31,0x31,0x7F,0x29,0x29,0x31,0x7F,0x29,0x29,0x29,0x7F,0x29,0x29,0x29,0x7F,0x29,0x31,0x31,0x7F };
	char pix2_5[24] = { 0x4A,0x4A,0x4A,0x7F,0x41,0x41,0x41,0x7F,0x31,0x31,0x31,0x7F,0x31,0x31,0x31,0x7F,0x31,0x31,0x31,0x7F,0x31,0x39,0x39,0x7F };
	char pix2_6[24] = { 0x00,0x00,0x00,0x0F,0x07,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x0F,0x06,0x0F,0x0F,0x0F,0x06,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0E };
	char pix2_7[24] = { 0x10,0x20,0x20,0x7F,0x18,0x18,0x20,0x7F,0x10,0x10,0x20,0x7F,0x10,0x10,0x18,0x7F,0x10,0x10,0x18,0x7F,0x10,0x18,0x18,0x7F };
	char pix2_8[24] = { 0x31,0x39,0x31,0x7F,0x29,0x31,0x29,0x7F,0x31,0x29,0x18,0x7F,0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x29,0x20,0x7F };
	char pix2_9[24] = { 0x39,0x41,0x39,0x7F,0x39,0x39,0x39,0x7F,0x39,0x31,0x18,0x7F,0x39,0x29,0x18,0x7F,0x39,0x29,0x18,0x7F,0x29,0x29,0x29,0x7F };
	char pix2_10[24] = { 0x41,0x41,0x41,0x7F,0x31,0x39,0x41,0x7F,0x20,0x29,0x41,0x7F,0x29,0x29,0x31,0x7F,0x29,0x29,0x31,0x7F,0x29,0x31,0x39,0x7F };
	char pix2_11[24] = { 0x52,0x4A,0x41,0x7F,0x41,0x41,0x41,0x7F,0x39,0x41,0x39,0x7F,0x39,0x39,0x39,0x7F,0x39,0x39,0x39,0x7F,0x41,0x41,0x39,0x7F };
	char pix2_12[24] = { 0x52,0x52,0x52,0x7F,0x5A,0x4A,0x29,0x7F,0x52,0x41,0x18,0x7F,0x52,0x39,0x18,0x7F,0x52,0x39,0x18,0x7F,0x31,0x39,0x39,0x7F };
	char pix2_13[24] = { 0x03,0x02,0x02,0x02,0x06,0x00,0x00,0x00,0x02,0x02,0x03,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x03,0x02,0x03 };
	char pix2_14[24] = { 0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x18,0x18,0x20,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x20,0x20,0x7F };
	char pix2_15[24] = { 0x29,0x39,0x41,0x7F,0x31,0x31,0x31,0x7F,0x29,0x29,0x29,0x7F,0x20,0x29,0x31,0x7F,0x20,0x29,0x31,0x7F,0x18,0x20,0x39,0x7F };
	char pix2_16[24] = { 0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F,0x18,0x18,0x18,0x7F };
	char pix2_17[24] = { 0x39,0x41,0x39,0x7F,0x29,0x31,0x39,0x7F,0x29,0x31,0x29,0x7F,0x20,0x29,0x31,0x7F,0x20,0x29,0x31,0x7F,0x29,0x29,0x39,0x7F };

	char pix3_2[24] = { 0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00 };
	char pix3_3[24] = { 0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x20,0x20,0x7F };
	char pix3_4[24] = { 0x20,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F };
	char pix3_5[24] = { 0x10,0x10,0x10,0x7F,0x10,0x10,0x10,0x7F,0x10,0x10,0x10,0x7F,0x10,0x10,0x10,0x7F,0x10,0x10,0x10,0x7F,0x10,0x10,0x10,0x7F };
	char pix3_6[24] = { 0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x7F };
	char pix3_7[24] = { 0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F };
	char pix3_8[24] = { 0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F,0x18,0x10,0x10,0x7F };
	char pix3_9[24] = { 0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F,0x08,0x10,0x10,0x7F };
	char pix3_10[24] = { 0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F,0x18,0x18,0x18,0x7F };

	char pix4_1[24] = { 0x62,0x5A,0x52,0x7F,0x5A,0x52,0x41,0x7F,0x94,0x4A,0x41,0x7F,0x41,0x41,0x4A,0x7F,0x18,0x18,0x18,0x7F,0x01,0x00,0x00,0x00 };
	char pix4_2[24] = { 0x41,0x5A,0x52,0x7F,0x39,0x52,0x41,0x7F,0x62,0x4A,0x41,0x7F,0x41,0x4A,0x41,0x7F,0x29,0x29,0x29,0x7F,0x29,0x29,0x29,0x7F };
	char pix4_3[24] = { 0x52,0x6A,0x83,0x7F,0x4A,0x5A,0x73,0x7F,0x62,0x62,0x62,0x7F,0x73,0x52,0x52,0x7F,0x20,0x20,0x18,0x7F,0x10,0x10,0x10,0x7F };
	char pix4_4[24] = { 0x20,0x31,0x39,0x7F,0x18,0x29,0x20,0x7F,0x18,0x20,0x29,0x7F,0x18,0x18,0x20,0x7F,0x41,0x41,0x41,0x7F,0x39,0x41,0x41,0x7F };
	char pix4_5[24] = { 0x29,0x39,0x41,0x7F,0x29,0x39,0x29,0x7F,0x29,0x31,0x41,0x7F,0x29,0x31,0x29,0x7F,0x10,0x10,0x10,0x7F,0x08,0x08,0x08,0x7F };
	char pix4_6[24] = { 0x52,0x52,0x4A,0x7F,0x39,0x4A,0x39,0x7F,0x4A,0x41,0x41,0x7F,0x41,0x41,0x39,0x7F,0x20,0x20,0x20,0x7F,0x18,0x18,0x18,0x7F };
	char pix4_7[24] = { 0x31,0x39,0x29,0x7F,0x29,0x31,0x29,0x7F,0x20,0x39,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x31,0x7F,0x01,0x00,0x00,0x00 };
	char pix4_8[24] = { 0x52,0x52,0x4A,0x7F,0x39,0x4A,0x39,0x7F,0x4A,0x41,0x41,0x7F,0x41,0x41,0x39,0x7F,0x20,0x20,0x20,0x7F,0x18,0x18,0x18,0x7F };
	char pix4_9[24] = { 0x31,0x39,0x29,0x7F,0x29,0x31,0x29,0x7F,0x20,0x39,0x20,0x7F,0x20,0x29,0x20,0x7F,0x20,0x29,0x31,0x7F,0x01,0x00,0x00,0x00 };

	char pix5_1[24] = { 0x5A,0x62,0x62,0x7F,0x5A,0x62,0x62,0x7F,0x5A,0x6A,0x6A,0x7F,0x31,0x41,0x39,0x7F,0x41,0x4A,0x41,0x7F,0x41,0x41,0x41,0x7F };
	char pix5_2[24] = { 0x6A,0x6A,0x73,0x7F,0x6A,0x6A,0x73,0x7F,0x6A,0x73,0x7B,0x7F,0x41,0x4A,0x52,0x7F,0x52,0x5A,0x5A,0x7F,0x52,0x52,0x52,0x7F };
	char pix5_3[24] = { 0x73,0x7B,0x7B,0x7F,0x73,0x7B,0x7B,0x7F,0x73,0x83,0x7B,0x7F,0x5A,0x62,0x62,0x7F,0x5A,0x6A,0x6A,0x7F,0x5A,0x62,0x6A,0x7F };
	char pix5_4[24] = { 0x73,0x83,0x83,0x7F,0x73,0x83,0x83,0x7F,0x73,0x83,0x8B,0x7F,0x5A,0x62,0x62,0x7F,0x62,0x7B,0x73,0x7F,0x62,0x73,0x73,0x7F };
	char pix5_5[24] = { 0x83,0x9C,0x94,0x7F,0x83,0x9C,0x94,0x7F,0x83,0x9C,0x9C,0x7F,0x62,0x7B,0x73,0x7F,0x73,0x83,0x7B,0x7F,0x6A,0x83,0x73,0x7F };
	char pix5_6[24] = { 0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x7F,0x39,0x4A,0x41,0x7F,0x31,0x39,0x31,0x7F,0x31,0x39,0x39,0x7F,0x31,0x39,0x31,0x7F };

	char pix9_1[24] = { 0x18,0x29,0x20,0x7F,0x20,0x20,0x20,0x7F,0x18,0x29,0x20,0x7F,0x20,0x31,0x29,0x7F,0x20,0x29,0x29,0x7F,0x20,0x31,0x29,0x7F };
	char pix9_2[24] = { 0x20,0x20,0x20,0x7F,0x18,0x29,0x20,0x7F,0x20,0x20,0x20,0x7F,0x20,0x31,0x29,0x7F,0x18,0x31,0x20,0x7F,0x29,0x31,0x31,0x7F };
	char pix9_3[24] = { 0x20,0x31,0x20,0x7F,0x20,0x31,0x20,0x7F,0x20,0x31,0x20,0x7F,0x20,0x41,0x20,0x7F,0x29,0x39,0x29,0x7F,0x31,0x39,0x31,0x7F };
	char pix9_4[24] = { 0x29,0x29,0x29,0x7F,0x20,0x29,0x20,0x7F,0x29,0x29,0x29,0x7F,0x31,0x41,0x39,0x7F,0x29,0x39,0x31,0x7F,0x31,0x41,0x4A,0x7F };
	char pix9_5[24] = { 0x31,0x41,0x4A,0x7F,0x31,0x4A,0x39,0x7F,0x31,0x41,0x4A,0x7F,0x52,0x62,0x6A,0x7F,0x41,0x5A,0x62,0x7F,0x52,0x6A,0x73,0x7F };
	char pix9_6[24] = { 0x41,0x39,0x31,0x7F,0x39,0x39,0x31,0x7F,0x41,0x39,0x31,0x7F,0x6A,0x5A,0x52,0x7F,0x52,0x52,0x41,0x7F,0x62,0x62,0x5A,0x7F };
	char pix9_7[24] = { 0x41,0x5A,0x62,0x7F,0x41,0x5A,0x62,0x7F,0x41,0x5A,0x62,0x7F,0x4A,0x62,0x6A,0x7F,0x52,0x62,0x6A,0x7F,0x52,0x62,0x73,0x7F };
	char pix9_8[24] = { 0x4A,0x62,0x6A,0x7F,0x41,0x5A,0x6A,0x7F,0x4A,0x62,0x6A,0x7F,0x52,0x73,0x83,0x7F,0x4A,0x6A,0x7B,0x7F,0x5A,0x73,0x8B,0x7F };
	char pix9_9[24] = { 0x52,0x62,0x6A,0x7F,0x4A,0x62,0x6A,0x7F,0x52,0x62,0x6A,0x7F,0x5A,0x7B,0x83,0x7F,0x5A,0x73,0x7B,0x7F,0x5A,0x7B,0x83,0x7F };
	char pix9_10[24] = { 0x5A,0x6A,0x73,0x7F,0x4A,0x6A,0x73,0x7F,0x5A,0x6A,0x73,0x7F,0x6A,0x83,0x83,0x7F,0x62,0x7B,0x83,0x7F,0x62,0x83,0x8B,0x7F };
	char pix9_11[24] = { 0x18,0x20,0x20,0x7F,0x18,0x20,0x20,0x7F,0x18,0x20,0x20,0x7F,0x18,0x31,0x20,0x7F,0x20,0x29,0x20,0x7F,0x10,0x31,0x29,0x7F };
	char pix9_12[24] = { 0x20,0x20,0x20,0x7F,0x18,0x29,0x20,0x7F,0x20,0x20,0x20,0x7F,0x29,0x31,0x29,0x7F,0x20,0x29,0x20,0x7F,0x29,0x29,0x29,0x7F };
	char pix9_13[24] = { 0x4A,0x4A,0x4A,0x7F,0x41,0x4A,0x41,0x7F,0x4A,0x4A,0x4A,0x7F,0x62,0x62,0x62,0x7F,0x5A,0x5A,0x5A,0x7F,0x62,0x6A,0x73,0x7F };
	char pix9_14[24] = { 0x4A,0x4A,0x4A,0x7F,0x4A,0x4A,0x41,0x7F,0x4A,0x4A,0x4A,0x7F,0x62,0x62,0x5A,0x7F,0x52,0x5A,0x5A,0x7F,0x6A,0x62,0x5A,0x7F };
	char pix9_15[24] = { 0x4A,0x5A,0x52,0x7F,0x41,0x52,0x5A,0x7F,0x4A,0x5A,0x52,0x7F,0x52,0x6A,0x73,0x7F,0x4A,0x62,0x62,0x7F,0x6A,0x73,0x6A,0x7F };
	char pix9_16[24] = { 0x18,0x29,0x20,0x7F,0x20,0x29,0x20,0x7F,0x18,0x29,0x20,0x7F,0x31,0x39,0x31,0x7F,0x18,0x39,0x29,0x7F,0x39,0x39,0x39,0x7F };
	char pix9_17[24] = { 0x4A,0x41,0x39,0x7F,0x41,0x41,0x39,0x7F,0x4A,0x41,0x39,0x7F,0x5A,0x52,0x52,0x7F,0x52,0x4A,0x4A,0x7F,0x62,0x5A,0x5A,0x7F };

	char pix10_1[24] = { 0x20,0x39,0x31,0x7F,0x20,0x39,0x29,0x7F,0x29,0x39,0x31,0x7F,0x10,0x10,0x10,0x7F,0x18,0x18,0x18,0x7F,0x18,0x29,0x20,0x7F };
	char pix10_2[24] = { 0x20,0x39,0x31,0x7F,0x20,0x39,0x31,0x7F,0x18,0x39,0x31,0x7F,0x08,0x08,0x08,0x7F,0x10,0x18,0x10,0x7F,0x18,0x20,0x20,0x7F };
	char pix10_3[24] = { 0x6A,0x6A,0x73,0x7F,0x62,0x62,0x6A,0x7F,0x6A,0x73,0x73,0x7F,0x18,0x18,0x18,0x7F,0x29,0x29,0x20,0x7F,0x41,0x41,0x41,0x7F };
	char pix10_4[24] = { 0x6A,0x73,0x6A,0x7F,0x6A,0x73,0x6A,0x7F,0x5A,0x73,0x73,0x7F,0x18,0x18,0x20,0x7F,0x29,0x31,0x31,0x7F,0x52,0x52,0x52,0x7F };
	char pix10_5[24] = { 0x52,0x62,0x6A,0x7F,0x52,0x62,0x62,0x7F,0x52,0x6A,0x62,0x7F,0x08,0x10,0x10,0x7F,0x20,0x20,0x20,0x7F,0x29,0x39,0x41,0x7F };
	char pix10_6[24] = { 0x5A,0x62,0x5A,0x7F,0x5A,0x5A,0x5A,0x7F,0x5A,0x62,0x6A,0x7F,0x18,0x18,0x18,0x7F,0x20,0x20,0x20,0x7F,0x41,0x39,0x31,0x7F };
	char pix10_7[24] = { 0x5A,0x62,0x6A,0x7F,0x5A,0x5A,0x5A,0x7F,0x62,0x62,0x62,0x7F,0x18,0x18,0x18,0x7F,0x20,0x20,0x20,0x7F,0x39,0x41,0x39,0x7F };

	char pix19_1[24] = { 0x4A,0x62,0x6A,0x7F,0x4A,0x62,0x6A,0x7F,0x52,0x62,0x6A,0x7F,0x41,0x52,0x5A,0x7F,0x41,0x5A,0x62,0x7F,0x41,0x52,0x62,0x7F };
	char pix19_2[24] = { 0x6A,0x6A,0x73,0x7F,0x6A,0x6A,0x73,0x7F,0x6A,0x73,0x7B,0x7F,0x41,0x4A,0x52,0x7F,0x52,0x5A,0x5A,0x7F,0x52,0x52,0x52,0x7F };
	char pix19_3[24] = { 0x73,0x7B,0x7B,0x7F,0x73,0x7B,0x7B,0x7F,0x73,0x83,0x7B,0x7F,0x5A,0x62,0x62,0x7F,0x5A,0x6A,0x6A,0x7F,0x5A,0x62,0x6A,0x7F };
	char pix19_4[24] = { 0x73,0x83,0x83,0x7F,0x73,0x83,0x83,0x7F,0x73,0x83,0x8B,0x7F,0x5A,0x62,0x62,0x7F,0x62,0x7B,0x73,0x7F,0x62,0x73,0x73,0x7F };
	char pix19_5[24] = { 0x83,0x9C,0x94,0x7F,0x83,0x9C,0x94,0x7F,0x83,0x9C,0x9C,0x7F,0x62,0x7B,0x73,0x7F,0x73,0x83,0x7B,0x7F,0x6A,0x83,0x73,0x7F };
	char pix19_6[24] = { 0x94,0x7B,0x73,0x7F,0x94,0x7B,0x73,0x7F,0x83,0x83,0x83,0x7F,0x4A,0x41,0x41,0x7F,0x6A,0x52,0x4A,0x7F,0x5A,0x4A,0x52,0x7F };
	char pix19_7[24] = { 0x94,0x83,0x83,0x7F,0x94,0x83,0x83,0x7F,0xBD,0x94,0x62,0x7F,0x6A,0x52,0x52,0x7F,0x7B,0x62,0x5A,0x7F,0x62,0x5A,0x62,0x7F };
	char pix19_8[24] = { 0x9C,0x94,0x94,0x7F,0x9C,0x94,0x94,0x7F,0x7B,0xA4,0xA4,0x7F,0x52,0x5A,0x5A,0x7F,0x62,0x73,0x6A,0x7F,0x8B,0x6A,0x62,0x7F };
	char pix19_9[24] = { 0xA4,0x9C,0x94,0x7F,0xA4,0x9C,0x94,0x7F,0xAC,0xA4,0x9C,0x7F,0x73,0x73,0x6A,0x7F,0x7B,0x7B,0x73,0x7F,0xBD,0x8B,0x39,0x7F };
	char pix19_10[24] = { 0xC5,0xA4,0x9C,0x7F,0xC5,0xA4,0x9C,0x7F,0xC5,0xAC,0xA4,0x7F,0x94,0x7B,0x6A,0x7F,0x8B,0x83,0x8B,0x7F,0x94,0x83,0x7B,0x7F };
	char pix19_11[24] = { 0xF6,0xBD,0x52,0x7F,0xF6,0xBD,0x52,0x7F,0xF6,0xC5,0x62,0x7F,0x83,0x62,0x4A,0x7F,0x7B,0x73,0x73,0x7F,0xB4,0x7B,0x41,0x7F };
	char pix19_12[24] = { 0x20,0x31,0x29,0x7F,0x20,0x31,0x29,0x7F,0x20,0x31,0x29,0x7F,0x18,0x20,0x18,0x7F,0x20,0x20,0x20,0x7F,0x18,0x20,0x20,0x7F };

	/*THREE 2*/if (!memcmp(pixels, pixNULL, 24)) {		lastKnownTextureId = -1; return -1; }
	/*THREE 2*/if (!memcmp(pixels, pixNULL2, 24)) {		lastKnownTextureId = -1; return -1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_1, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_2, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_3, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_4, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_5, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_6, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_7, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_8, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_9, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_10, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_11, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_12, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_13, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_14, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_15, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_16, 24)) {		lastKnownTextureId = 1; return 1; }
	/*THREE 2*/if (!memcmp(pixels, pix1_17, 24)) {		lastKnownTextureId = 1; return 1; }

	/*THREE 2*/if (!memcmp(pixels, pix2_1, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_2, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_3, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_4, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_5, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_6, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_7, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_8, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_9, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_10, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_11, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_12, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_13, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_14, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_15, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_16, 24)) {		lastKnownTextureId = 2; return 2; }
	/*THREE 2*/if (!memcmp(pixels, pix2_17, 24)) {		lastKnownTextureId = 2; return 2; }

	/*THREE 2*/if (!memcmp(pixels, pix3_2, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_3, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_4, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_5, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_6, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_7, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_8, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_9, 24)) {		lastKnownTextureId = 3; return 3; }
	/*THREE 2*/if (!memcmp(pixels, pix3_10, 24)) {		lastKnownTextureId = 3; return 3; }

	/*THREE 2*/if (!memcmp(pixels, pix4_1, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_2, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_3, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_4, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_5, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_6, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_7, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_8, 24)) {		lastKnownTextureId = 4; return 4; }
	/*THREE 2*/if (!memcmp(pixels, pix4_9, 24)) {		lastKnownTextureId = 4; return 4; }

	/*THREE 2*/if (!memcmp(pixels, pix5_1, 24)) {		lastKnownTextureId = 5; return 5; }
	/*THREE 2*/if (!memcmp(pixels, pix5_2, 24)) {		lastKnownTextureId = 5; return 5; }
	/*THREE 2*/if (!memcmp(pixels, pix5_3, 24)) {		lastKnownTextureId = 5; return 5; }
	/*THREE 2*/if (!memcmp(pixels, pix5_4, 24)) {		lastKnownTextureId = 5; return 5; }
	/*THREE 2*/if (!memcmp(pixels, pix5_5, 24)) {		lastKnownTextureId = 5; return 5; }
	/*THREE 2*/if (!memcmp(pixels, pix5_6, 24)) {		lastKnownTextureId = 5; return 5; }

	/*THREE 2*/if (!memcmp(pixels, pix9_1, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_2, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_3, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_4, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_5, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_6, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_7, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_8, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_9, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_10, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_11, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_12, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_13, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_14, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_15, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_16, 24)) {		lastKnownTextureId = 9; return 9; }
	/*THREE 2*/if (!memcmp(pixels, pix9_17, 24)) {		lastKnownTextureId = 9; return 9; }

	/*THREE 2*/if (!memcmp(pixels, pix10_1, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_2, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_3, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_4, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_5, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_6, 24)) {		lastKnownTextureId = 10; return 10; }
	/*THREE 2*/if (!memcmp(pixels, pix10_7, 24)) {		lastKnownTextureId = 10; return 10; }

	/*THREE 2*/if (!memcmp(pixels, pix19_1, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_2, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_3, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_4, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_5, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_6, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_7, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_8, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_9, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_10, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_11, 24)) {		lastKnownTextureId = 19; return 19; }
	/*THREE 2*/if (!memcmp(pixels, pix19_12, 24)) {		lastKnownTextureId = 19; return 19; }

	char localn[256];
	sprintf(localn, "_wpp::Unknown tex buffer, mem is: %08X, use: ", pixels);
	OutputDebug(localn);
	//DWORD whichTex;
	//scanf("%d", &whichTex);

	/*FILE* fd = fopen("demasterWorldHashes.txt", "a+");
	sprintf(localn, "%d=", whichTex);
	for (int i = 0; i < 24; i++)
	{
		sprintf(localn, "%s0x%02X,", localn, *(BYTE*)pixels)+i));
	}
	strcat(localn, "\n");
	fwrite(localn, sizeof(char), strlen(localn), fd);
	fclose(fd);*/

	//lastKnownTextureId = whichTex;
	//return whichTex;

	return -1;
}

DWORD LOCALDEB = 0;

DWORD _wtpCheck()
{
	if (!WORLD_TEXTURES)
		return 0;

	int textureType = gl_textures[48];
	if (textureType != 18) //we want only world textures
		return 0;

	DWORD tPage = gl_textures[50];
	if (tPage < 16)
		return 0;
	if (tPage > 26)
		return 0;

	DWORD testVar = *(DWORD*)(IMAGE_BASE + 0x1780f88);
	int textureSizeComparer = gl_textures[66];
	if (textureSizeComparer == 1024)
		return 0;
		
	int palette = gl_textures[39]; //tpage is 50
	int pixelPtr_ = pixelsPtr;
	int unk36 = gl_textures[36];
	int unk38 = gl_textures[38];
	int unk40 = gl_textures[40];
	int unk46 = gl_textures[46];
	int unk67 = gl_textures[67];
	int unk68 = gl_textures[68];

	//if (GetTextureIndex() == -1)
	//{
		//char debugLog[2048];
		//debugLog[0] = '\0';
		//sprintf(debugLog, "%d,%d,%d,%d,%08X,%08X,%08X,%08X,%08X,%08X,%d,%d\n", LOCALDEB, textureType, testVar,
		//	palette, unk36, unk38, unk40, unk46, unk67, unk68, gl_textures[70], gl_textures[72]);
		//FILE* fd = fopen("D:\\DBG\\DBG.csv", "a+");
		//fwrite(debugLog, sizeof(char), strlen(debugLog), fd);
		//fclose(fd);

		//sprintf(debugLog, "D:\\DBG\\DBG_%d.png", LOCALDEB++);
		//stbi_write_png(debugLog, 256, 256, 4, pixelsPtr, 256 * 4);
	//}

	char localn[256];
	sprintf(localn, "%stextures\\world\\dat\\texl\\texl_%03d_0.png", DIRECT_IO_EXPORT_DIR, GetTextureIndex());

	DWORD attr = GetFileAttributesA(localn);
	if (attr == INVALID_FILE_ATTRIBUTES)
	{
		sprintf(localn, "_wtpCheck FAILED ON TEXTURE!; Expected: a0stg%03d_%d.png", currentStage, tPage);
		return 0;
	}
	return 1;
}

DWORD _wtp00_SizeConfirm;
DWORD _wtp00_OffsetTexl;

void _wtp00()
{
	char localn[256];
	sprintf(localn, "WorldModule::GetTexl.obj- Offset: %08X\tSize: %08X\t ID: %d\n", _wtp00_OffsetTexl, _wtp00_SizeConfirm, _wtp00_OffsetTexl/0x12800);
	OutputDebug(localn);
}

__declspec(naked) void _wtp()
{
	__asm
	{
		MOV EAX, [ESP+8]
		MOV _wtp00_SizeConfirm, EAX
		MOV EAX, [ESP+4]
		MOV _wtp00_OffsetTexl, EAX
		CALL _wtp00
		MOV EAX, OFFSET IMAGE_BASE
		MOV EAX, [EAX]
		ADD EAX, 0x155F3F0
		CALL EAX
		JMP _wtpBackAdd1
	}
}

__declspec(naked) void _wtp01()
{
	__asm
	{
		MOV EAX, [ESP + 8]
		MOV _wtp00_SizeConfirm, EAX
		MOV EAX, [ESP + 4]
		MOV _wtp00_OffsetTexl, EAX
		CMP _wtp00_SizeConfirm, 0x12800
		JNE _notTexl
		CALL _wtp00
		_notTexl:
		MOV EAX, OFFSET IMAGE_BASE
		MOV EAX, [EAX]
		ADD EAX, 0x155F3F0
		CALL EAX
		JMP _wtpBackAdd2
	}
}

void ApplyWorldPatch()
{
	_wtpBackAdd1 = (DWORD)InjectJMP(IMAGE_BASE + 0x09107BD, (DWORD)_wtp, 5); //this is to dump data from pre-texl.obj
	_wtpBackAdd2 = (DWORD)InjectJMP(IMAGE_BASE + 0x09101F1, (DWORD)_wtp01, 5); //this is to pre-select PNG if available
	//_wtpBackAdd3 = InjectJMP(IMAGE_BASE + 0x155F504, (DWORD)_wtpGetEax, 6); //I don't know which texId to load due to the way wm is constructed
}